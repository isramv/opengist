<?php

namespace BetterGistsBundle\Repository;

use BetterGistsBundle\Entity\Tags;
use BetterGistsBundle\Entity\Gist;
use Doctrine\ORM\EntityRepository;
use BetterGistsBundle\BetterGistsBundle;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TagsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagsRepository extends EntityRepository
{
  public function getGistsCountByTag()
  {
    $dql = 'SELECT t.name, t.id, COUNT (g) AS theCount
            FROM BetterGistsBundle:Tags t 
            JOIN t.gists g 
            GROUP BY t.id
            ORDER BY theCount DESC, t.id DESC';
    $em = $this->getEntityManager()
      ->createQuery($dql)->getResult();
    return $em;
  }

  /**
   * @param int $firstValue
   * @param int $numberOfValues
   * @return \Doctrine\ORM\Tools\Pagination\Paginator
   */
  public function getGistsCountByTagPaginator($firstValue, $numberOfValues)
  {
    $dql = 'SELECT t.name, t.id, COUNT (g) AS theCount
            FROM BetterGistsBundle:Tags t 
            JOIN t.gists g
            GROUP BY t.id
            ORDER BY theCount DESC, t.id DESC';

    $query = $this->getEntityManager()
      ->createQuery($dql)
      ->setFirstResult($firstValue)
      ->setMaxResults($numberOfValues);
  
    return new Paginator($query, $fetchJoinCollection = false);

  }

  /**
   * @return int
   */
  public function countAllTags()
  {
    $dql = 'SELECT t.name, t.id, COUNT(g) as theCount
            FROM BetterGistsBundle:Tags t
            JOIN t.gists g
            GROUP BY t.id';
    $query = $this->getEntityManager()
      ->createQuery($dql)
      ->getResult();
    return count($query);
  }

  /**
   * @param string $name
   * @return mixed
   */
  public function findByExactName($name)
  {
    $dql = 'SELECT t.name, t.id
      FROM BetterGistsBundle:Tags t
      WHERE t.name = :name
    ';
    $em = $this->getEntityManager();
    $result = $em->createQuery($dql)
      ->setParameter(':name', $name)
      ->getResult();

    foreach ($result as $result_item) {
      if($result_item['name'] === $name) {
        $result = $this->find($result_item['id']);
        return $result;
      }
    }

    return false;

  }

  /**
   * @param $user_id
   */
  public function findByIdAndUserId($tag_id, $user_id) {

    $dql = "SELECT g.id AS gist_id, g.title AS gist_title,
            a.id AS author_id, t.name AS term_name,
            t.id AS term_id
            FROM BetterGistsBundle:Gist g
            JOIN g.author a
            JOIN g.tags t
            WHERE a.id = :aid AND
            t.id = :termid";
    $em = $this->getEntityManager();
    $result = $em->createQuery($dql)
      ->setParameter(':aid', $user_id)
      ->setParameter(':termid', $tag_id)
      ->getResult();
    return $result;
  }
}
